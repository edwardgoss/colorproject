{"ast":null,"code":"var _jsxFileName = \"/Users/edwardgoss/Documents/2020/new-color-project/src/PaletteFormNav.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nconst drawerWidth = 400;\nconst styles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  navBtns: {}\n}));\n\nfunction PaletteFormNav(props) {\n  const {\n    open,\n    handleDrawerOpen,\n    handleSubmit\n  } = props;\n  const [paletteName, setPaletteName] = useState(\"\");\n  const classes = styles();\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => {\n      return props.palettes.every(({\n        paletteName\n      }) => paletteName.toLowerCase() !== value.toLowerCase());\n    }, [props.palettes]);\n  });\n\n  const handleChange = e => {\n    //handles color name or palette name changes\n    setPaletteName(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    color: \"default\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Create A Palette\"), React.createElement(\"div\", {\n    className: classes.navBtns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(ValidatorForm, {\n    onSubmit: () => handleSubmit(paletteName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    label: \"Palette Name\",\n    value: paletteName,\n    name: \"paletteName\",\n    onChange: handleChange,\n    validators: [\"required\", \"isPaletteNameUnique\"],\n    errorMessages: [\"Enter Palette Name\", \"Name already used\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Save Palette\")), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Go Back\"))))));\n}\n\nexport default PaletteFormNav;","map":{"version":3,"sources":["/Users/edwardgoss/Documents/2020/new-color-project/src/PaletteFormNav.js"],"names":["React","useState","useEffect","Link","makeStyles","clsx","CssBaseline","AppBar","Toolbar","Button","Typography","IconButton","MenuIcon","ValidatorForm","TextValidator","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","flexDirection","justifyContent","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","navBtns","PaletteFormNav","props","open","handleDrawerOpen","handleSubmit","paletteName","setPaletteName","classes","addValidationRule","value","palettes","every","toLowerCase","handleChange","e","target","hide"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nconst drawerWidth = 400;\n\nconst styles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  navBtns: {}\n}));\n\nfunction PaletteFormNav(props) {\n  const { open, handleDrawerOpen, handleSubmit } = props;\n  const [paletteName, setPaletteName] = useState(\"\");\n  const classes = styles();\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\n      \"isPaletteNameUnique\",\n      value => {\n        return props.palettes.every(\n          ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n        );\n      },\n      [props.palettes]\n    );\n  });\n\n  const handleChange = e => {\n    //handles color name or palette name changes\n    setPaletteName(e.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        color=\"default\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Create A Palette\n          </Typography>\n          <div className={classes.navBtns}>\n            <ValidatorForm onSubmit={() => handleSubmit(paletteName)}>\n              <TextValidator\n                label=\"Palette Name\"\n                value={paletteName}\n                name=\"paletteName\"\n                onChange={handleChange}\n                validators={[\"required\", \"isPaletteNameUnique\"]}\n                errorMessages={[\"Enter Palette Name\", \"Name already used\"]}\n              />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save Palette\n              </Button>\n            </ValidatorForm>\n            <Link to=\"/\">\n              <Button variant=\"contained\" color=\"secondary\">\n                Go Back\n              </Button>\n            </Link>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default PaletteFormNav;\n"]},"metadata":{},"sourceType":"module"}