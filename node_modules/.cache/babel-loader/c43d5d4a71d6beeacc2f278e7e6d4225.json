{"ast":null,"code":"var _jsxFileName = \"/Users/edwardgoss/Documents/2020/new-color-project/src/PaletteFormNav.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nfunction PaletteFormNav(props) {\n  const {\n    classes,\n    open,\n    handleDrawerOpen,\n    handleSubmit\n  } = props;\n  const [paletteName, setPaletteName] = useState(\"\");\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => {\n      return props.palettes.every(({\n        paletteName\n      }) => paletteName.toLowerCase() !== value.toLowerCase());\n    }, [props.palettes]);\n  });\n\n  const handleChange = e => {\n    //handles color name or palette name changes\n    setPaletteName(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    color: \"default\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Persistent drawer\"), React.createElement(ValidatorForm, {\n    onSubmit: () => handleSubmit(paletteName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    label: \"Palette Name\",\n    value: paletteName,\n    name: \"paletteName\",\n    onChange: handleChange,\n    validators: [\"required\", \"isPaletteNameUnique\"],\n    errorMessages: [\"Enter Palette Name\", \"Name already used\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Save Palette\"), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Go Back\"))))));\n}\n\nexport default PaletteFormNav;","map":{"version":3,"sources":["/Users/edwardgoss/Documents/2020/new-color-project/src/PaletteFormNav.js"],"names":["React","useState","useEffect","Link","clsx","CssBaseline","AppBar","Toolbar","Button","Typography","IconButton","MenuIcon","ValidatorForm","TextValidator","PaletteFormNav","props","classes","open","handleDrawerOpen","handleSubmit","paletteName","setPaletteName","addValidationRule","value","palettes","every","toLowerCase","handleChange","e","target","appBar","appBarShift","menuButton","hide"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nfunction PaletteFormNav(props) {\n  const { classes, open, handleDrawerOpen, handleSubmit } = props;\n  const [paletteName, setPaletteName] = useState(\"\");\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\n      \"isPaletteNameUnique\",\n      value => {\n        return props.palettes.every(\n          ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n        );\n      },\n      [props.palettes]\n    );\n  });\n\n  const handleChange = e => {\n    //handles color name or palette name changes\n    setPaletteName(e.target.value);\n  };\n\n  return (\n    <div>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        color=\"default\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Persistent drawer\n          </Typography>\n          <ValidatorForm onSubmit={() => handleSubmit(paletteName)}>\n            <TextValidator\n              label=\"Palette Name\"\n              value={paletteName}\n              name=\"paletteName\"\n              onChange={handleChange}\n              validators={[\"required\", \"isPaletteNameUnique\"]}\n              errorMessages={[\"Enter Palette Name\", \"Name already used\"]}\n            />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save Palette\n            </Button>\n            <Link to=\"/\">\n              <Button variant=\"contained\" color=\"secondary\">\n                Go Back\n              </Button>\n            </Link>\n          </ValidatorForm>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default PaletteFormNav;\n"]},"metadata":{},"sourceType":"module"}