{"ast":null,"code":"var _jsxFileName = \"/Users/edwardgoss/Documents/2020/new-color-project/src/ColorBox.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport styles from \"./styles/ColorBoxStyles\";\nimport \"./ColorBox.css\";\nimport { withStyles } from \"@material-ui/styles\";\n\nfunction ColorBox(props) {\n  const {\n    name,\n    background,\n    moreUrl,\n    showingFullPalette,\n    classes\n  } = props;\n  const [copied, setCopied] = useState(false);\n  useEffect(() => {\n    copied && setTimeout(() => setCopied(), 1500);\n  });\n\n  const changeCopyState = () => {\n    setCopied(!copied);\n  };\n\n  return React.createElement(CopyToClipboard, {\n    text: background,\n    onCopy: changeCopyState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background\n    },\n    className: classes.ColorBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background\n    },\n    className: `${classes.copyOverlay} ${copied && classes.showOverlay}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: `${classes.copyMessage} ${copied && classes.showMessage}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"copied!\"), React.createElement(\"p\", {\n    className: classes.copyText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, background)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.boxContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.colorName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, name)), React.createElement(\"button\", {\n    className: classes.copyButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Copy\")), showingFullPalette && React.createElement(Link, {\n    to: moreUrl,\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.seeMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"More\"))));\n}\n\nexport default withStyles(styles)(ColorBox);","map":{"version":3,"sources":["/Users/edwardgoss/Documents/2020/new-color-project/src/ColorBox.js"],"names":["React","useState","useEffect","Link","CopyToClipboard","styles","withStyles","ColorBox","props","name","background","moreUrl","showingFullPalette","classes","copied","setCopied","setTimeout","changeCopyState","copyOverlay","showOverlay","copyMessage","showMessage","copyText","boxContent","colorName","copyButton","e","stopPropagation","seeMore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,kBAA7B;AAAiDC,IAAAA;AAAjD,MAA6DL,KAAnE;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM,IAAIE,UAAU,CAAC,MAAMD,SAAS,EAAhB,EAAoB,IAApB,CAApB;AACD,GAFQ,CAAT;;AAGA,QAAME,eAAe,GAAG,MAAM;AAC5BF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,SACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEJ,UAAvB;AAAmC,IAAA,MAAM,EAAEO,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEP,MAAAA;AAAF,KAAZ;AAA4B,IAAA,SAAS,EAAEG,OAAO,CAACN,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF,KADT;AAEE,IAAA,SAAS,EAAG,GAAEG,OAAO,CAACK,WAAY,IAAGJ,MAAM,IAAID,OAAO,CAACM,WAAY,EAFrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AACE,IAAA,SAAS,EAAG,GAAEN,OAAO,CAACO,WAAY,IAAGN,MAAM,IAAID,OAAO,CAACQ,WAAY,EADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAG,IAAA,SAAS,EAAER,OAAO,CAACS,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCZ,UAAjC,CAJF,CALF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACU,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACW,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCf,IAArC,CADF,CADF,EAIE;AAAQ,IAAA,SAAS,EAAEI,OAAO,CAACY,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAXF,EAiBGb,kBAAkB,IACjB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,OAAV;AAAmB,IAAA,OAAO,EAAEe,CAAC,IAAIA,CAAC,CAACC,eAAF,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACe,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAlBJ,CADF,CADF;AA2BD;;AAED,eAAetB,UAAU,CAACD,MAAD,CAAV,CAAmBE,QAAnB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport styles from \"./styles/ColorBoxStyles\";\nimport \"./ColorBox.css\";\nimport { withStyles } from \"@material-ui/styles\";\n\nfunction ColorBox(props) {\n  const { name, background, moreUrl, showingFullPalette, classes } = props;\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    copied && setTimeout(() => setCopied(), 1500);\n  });\n  const changeCopyState = () => {\n    setCopied(!copied);\n  };\n\n  return (\n    <CopyToClipboard text={background} onCopy={changeCopyState}>\n      <div style={{ background }} className={classes.ColorBox}>\n        <div\n          style={{ background }}\n          className={`${classes.copyOverlay} ${copied && classes.showOverlay}`}\n        />\n        <div\n          className={`${classes.copyMessage} ${copied && classes.showMessage}`}\n        >\n          <h1>copied!</h1>\n          <p className={classes.copyText}>{background}</p>\n        </div>\n        <div>\n          <div className={classes.boxContent}>\n            <span className={classes.colorName}>{name}</span>\n          </div>\n          <button className={classes.copyButton}>Copy</button>\n        </div>\n        {showingFullPalette && (\n          <Link to={moreUrl} onClick={e => e.stopPropagation()}>\n            <span className={classes.seeMore}>More</span>\n          </Link>\n        )}\n      </div>\n    </CopyToClipboard>\n  );\n}\n\nexport default withStyles(styles)(ColorBox);\n"]},"metadata":{},"sourceType":"module"}