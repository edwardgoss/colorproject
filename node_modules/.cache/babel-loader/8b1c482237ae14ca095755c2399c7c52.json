{"ast":null,"code":"var _jsxFileName = \"/Users/edwardgoss/Documents/2020/new-color-project/src/Navbar.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"rc-slider\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport styles from \"./styles/NavbarStyles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport \"./Navbar.css\";\nimport \"rc-slider/assets/index.css\";\n\nconst Navbar = props => {\n  const [format, setFormat] = useState(\"hex\");\n  const [open, setOpen] = useState(false);\n  const {\n    level,\n    changeLevel,\n    showingAllColors,\n    classes\n  } = props;\n\n  const handleFormatChange = e => {\n    setFormat(e.target.value);\n    setOpen(true);\n    props.handleChange(e.target.value);\n  };\n\n  const closeSnackbar = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"header\", {\n    className: classes.navbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Color Palette Generator\")), showingAllColors && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Level: \", level), React.createElement(\"div\", {\n    className: classes.slider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    defaultValue: level,\n    min: 100,\n    max: 900,\n    step: 100,\n    onAfterChange: changeLevel,\n    trackStyle: {\n      backgroundColor: \"transparent\"\n    },\n    handleStyle: {\n      backgroundColor: \"green\",\n      outline: \"none\",\n      border: \"2px solid green\",\n      boxShadow: \"none\",\n      width: \"13px\",\n      height: \"13px\",\n      marginTop: \"-3px\"\n    },\n    railStyle: {\n      height: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.selectContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: format,\n    onChange: handleFormatChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"hex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"HEX - #ffffff\"), React.createElement(MenuItem, {\n    value: \"rgb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"RGB - rgb(255,255,255)\"), React.createElement(MenuItem, {\n    value: \"rgba\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"RGBA - rgba (255,255,255, 1.0)\"))), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open,\n    autoHideDuration: 3000,\n    message: React.createElement(\"span\", {\n      id: \"message-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Format Changed to \", format.toUpperCase()),\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    onClose: closeSnackbar,\n    action: [React.createElement(IconButton, {\n      onClick: closeSnackbar,\n      color: \"inherit\",\n      key: \"close\",\n      \"aria-label\": \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n};\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/Users/edwardgoss/Documents/2020/new-color-project/src/Navbar.js"],"names":["React","useState","Link","Select","MenuItem","Slider","Snackbar","CloseIcon","IconButton","styles","withStyles","Navbar","props","format","setFormat","open","setOpen","level","changeLevel","showingAllColors","classes","handleFormatChange","e","target","value","handleChange","closeSnackbar","navbar","logo","slider","backgroundColor","outline","border","boxShadow","width","height","marginTop","selectContainer","vertical","horizontal","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"rc-slider\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport styles from \"./styles/NavbarStyles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport \"./Navbar.css\";\nimport \"rc-slider/assets/index.css\";\n\nconst Navbar = props => {\n  const [format, setFormat] = useState(\"hex\");\n  const [open, setOpen] = useState(false);\n  const { level, changeLevel, showingAllColors, classes } = props;\n  const handleFormatChange = e => {\n    setFormat(e.target.value);\n    setOpen(true);\n    props.handleChange(e.target.value);\n  };\n  const closeSnackbar = () => {\n    setOpen(false);\n  };\n  return (\n    <header className={classes.navbar}>\n      <div className={classes.logo}>\n        <Link to=\"/\">Color Palette Generator</Link>\n      </div>\n      {showingAllColors && (\n        <div>\n          <span>Level: {level}</span>\n          <div className={classes.slider}>\n            <Slider\n              defaultValue={level}\n              min={100}\n              max={900}\n              step={100}\n              onAfterChange={changeLevel}\n              trackStyle={{ backgroundColor: \"transparent\" }}\n              handleStyle={{\n                backgroundColor: \"green\",\n                outline: \"none\",\n                border: \"2px solid green\",\n                boxShadow: \"none\",\n                width: \"13px\",\n                height: \"13px\",\n                marginTop: \"-3px\"\n              }}\n              railStyle={{ height: 8 }}\n            />\n          </div>\n        </div>\n      )}\n      <div className={classes.selectContainer}>\n        <Select value={format} onChange={handleFormatChange}>\n          <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\n          <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n          <MenuItem value=\"rgba\">RGBA - rgba (255,255,255, 1.0)</MenuItem>\n        </Select>\n      </div>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={open}\n        autoHideDuration={3000}\n        message={\n          <span id=\"message-id\">Format Changed to {format.toUpperCase()}</span>\n        }\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        onClose={closeSnackbar}\n        action={[\n          <IconButton\n            onClick={closeSnackbar}\n            color=\"inherit\"\n            key=\"close\"\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </header>\n  );\n};\n\nexport default withStyles(styles)(Navbar);\n"]},"metadata":{},"sourceType":"module"}