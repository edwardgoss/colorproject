{"ast":null,"code":"var _jsxFileName = \"/Users/edwardgoss/Documents/2020/new-color-project/src/SingleColorPalette.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport PaletteFooter from \"./PaletteFooter\";\nimport ColorBox from \"./ColorBox\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n  Palette: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  colors: {\n    height: \"90%\",\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  goBack: {\n    width: \"20%\",\n    height: \"50%\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    opacity: 1\n  }\n};\n\nfunction SingleColorPalette(props) {\n  const _shades = gatherShades(props.palette, props.colorId);\n\n  const [format, setFormat] = useState(\"hex\");\n  const {\n    paletteName,\n    emoji,\n    id\n  } = props.palette;\n  const {\n    classes\n  } = props;\n\n  const changeFormat = val => {\n    setFormat(val);\n  };\n\n  const colorBoxes = _shades.map(color => React.createElement(ColorBox, {\n    key: color.name,\n    name: color.name,\n    background: color[format],\n    showingFullPalette: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    className: classes.Palette,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    handleChange: changeFormat,\n    showingAllColors: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, colorBoxes, React.createElement(\"div\", {\n    className: classes.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/palette/${id}`,\n    className: \"back-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"GO BACK\"))), React.createElement(PaletteFooter, {\n    paletteName: paletteName,\n    emoji: emoji,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}\n\nconst gatherShades = (palette, colorToFilterBy) => {\n  let shades = [];\n  let allColors = palette.colors;\n\n  for (let key in allColors) {\n    shades = shades.concat(allColors[key].filter(color => color.id === colorToFilterBy));\n  } //return all shades of given colors\n\n\n  return shades.slice(1);\n};\n\nexport default withStyles(styles)(SingleColorPalette);","map":{"version":3,"sources":["/Users/edwardgoss/Documents/2020/new-color-project/src/SingleColorPalette.js"],"names":["React","useState","Link","Navbar","PaletteFooter","ColorBox","withStyles","styles","Palette","height","display","flexDirection","colors","flexWrap","goBack","width","position","cursor","opacity","SingleColorPalette","props","_shades","gatherShades","palette","colorId","format","setFormat","paletteName","emoji","id","classes","changeFormat","val","colorBoxes","map","color","name","colorToFilterBy","shades","allColors","key","concat","filter","slice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport PaletteFooter from \"./PaletteFooter\";\nimport ColorBox from \"./ColorBox\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst styles = {\n  Palette: { height: \"100vh\", display: \"flex\", flexDirection: \"column\" },\n  colors: { height: \"90%\", display: \"flex\", flexWrap: \"wrap\" },\n  goBack: {\n    width: \"20%\",\n    height: \"50%\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    opacity: 1\n  }\n};\n\nfunction SingleColorPalette(props) {\n  const _shades = gatherShades(props.palette, props.colorId);\n  const [format, setFormat] = useState(\"hex\");\n  const { paletteName, emoji, id } = props.palette;\n  const { classes } = props;\n  const changeFormat = val => {\n    setFormat(val);\n  };\n  const colorBoxes = _shades.map(color => (\n    <ColorBox\n      key={color.name}\n      name={color.name}\n      background={color[format]}\n      showingFullPalette={false}\n    />\n  ));\n  return (\n    <div className={classes.Palette}>\n      <Navbar handleChange={changeFormat} showingAllColors={false} />\n      <div className={classes.colors}>\n        {colorBoxes}\n        <div className={classes.goBack}>\n          <Link to={`/palette/${id}`} className=\"back-button\">\n            GO BACK\n          </Link>\n        </div>\n      </div>\n      <PaletteFooter paletteName={paletteName} emoji={emoji} />\n    </div>\n  );\n}\n\nconst gatherShades = (palette, colorToFilterBy) => {\n  let shades = [];\n  let allColors = palette.colors;\n  for (let key in allColors) {\n    shades = shades.concat(\n      allColors[key].filter(color => color.id === colorToFilterBy)\n    );\n  }\n  //return all shades of given colors\n  return shades.slice(1);\n};\n\nexport default withStyles(styles)(SingleColorPalette);\n"]},"metadata":{},"sourceType":"module"}