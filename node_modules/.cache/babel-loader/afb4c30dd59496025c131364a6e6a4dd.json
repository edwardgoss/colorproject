{"ast":null,"code":"var _jsxFileName = \"/Users/edwardgoss/Documents/2020/new-color-project/src/ColorBox.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport chroma from \"chroma-js\";\nimport \"./ColorBox.css\";\nexport default function ColorBox(props) {\n  const {\n    name,\n    background,\n    moreUrl,\n    showLink\n  } = props;\n  const [copied, setCopied] = useState(false);\n  const isDarkColor = chroma(background).luminance() <= 0.08;\n  const isLightColor = chroma(background).luminance() >= 0.8;\n  useEffect(() => {\n    copied && setTimeout(() => setCopied(), 1500);\n  });\n\n  const changeCopyState = () => {\n    setCopied(!copied);\n  };\n\n  return React.createElement(CopyToClipboard, {\n    text: background,\n    onCopy: changeCopyState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background\n    },\n    className: \"ColorBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background\n    },\n    className: `copy-overlay ${copied && \"show\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: `copy-msg ${copied && \"show\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"copied!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, background)), React.createElement(\"div\", {\n    className: \"copy-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"box-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: isDarkColor && \"light-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, name)), React.createElement(\"button\", {\n    className: \"copy-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Copy\")), showLink && React.createElement(Link, {\n    to: moreUrl,\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: `see-more ${isLightColor && \"dark-text\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"More\"))));\n}","map":{"version":3,"sources":["/Users/edwardgoss/Documents/2020/new-color-project/src/ColorBox.js"],"names":["React","useState","useEffect","Link","CopyToClipboard","chroma","ColorBox","props","name","background","moreUrl","showLink","copied","setCopied","isDarkColor","luminance","isLightColor","setTimeout","changeCopyState","e","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAA0CJ,KAAhD;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMa,WAAW,GAAGT,MAAM,CAACI,UAAD,CAAN,CAAmBM,SAAnB,MAAkC,IAAtD;AACA,QAAMC,YAAY,GAAGX,MAAM,CAACI,UAAD,CAAN,CAAmBM,SAAnB,MAAkC,GAAvD;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,IAAIK,UAAU,CAAC,MAAMJ,SAAS,EAAhB,EAAoB,IAApB,CAApB;AACD,GAFQ,CAAT;;AAGA,QAAMK,eAAe,GAAG,MAAM;AAC5BL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,SACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEH,UAAvB;AAAmC,IAAA,MAAM,EAAES,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAET,MAAAA;AAAF,KAAZ;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KADT;AAEE,IAAA,SAAS,EAAG,gBAAeG,MAAM,IAAI,MAAO,EAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAK,IAAA,SAAS,EAAG,YAAWA,MAAM,IAAI,MAAO,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,UAAJ,CAFF,CALF,EASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEK,WAAW,IAAI,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CN,IAA/C,CADF,CADF,EAIE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CATF,EAeGG,QAAQ,IACP,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,OAAV;AAAmB,IAAA,OAAO,EAAES,CAAC,IAAIA,CAAC,CAACC,eAAF,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAG,YAAWJ,YAAY,IAAI,WAAY,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAhBJ,CADF,CADF;AA6BD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport chroma from \"chroma-js\";\nimport \"./ColorBox.css\";\n\nexport default function ColorBox(props) {\n  const { name, background, moreUrl, showLink } = props;\n  const [copied, setCopied] = useState(false);\n  const isDarkColor = chroma(background).luminance() <= 0.08;\n  const isLightColor = chroma(background).luminance() >= 0.8;\n\n  useEffect(() => {\n    copied && setTimeout(() => setCopied(), 1500);\n  });\n  const changeCopyState = () => {\n    setCopied(!copied);\n  };\n\n  return (\n    <CopyToClipboard text={background} onCopy={changeCopyState}>\n      <div style={{ background }} className=\"ColorBox\">\n        <div\n          style={{ background }}\n          className={`copy-overlay ${copied && \"show\"}`}\n        />\n        <div className={`copy-msg ${copied && \"show\"}`}>\n          <h1>copied!</h1>\n          <p>{background}</p>\n        </div>\n        <div className=\"copy-container\">\n          <div className=\"box-content\">\n            <span className={isDarkColor && \"light-text\"}>{name}</span>\n          </div>\n          <button className=\"copy-button\">Copy</button>\n        </div>\n        {showLink && (\n          <Link to={moreUrl} onClick={e => e.stopPropagation()}>\n            <span className={`see-more ${isLightColor && \"dark-text\"}`}>\n              More\n            </span>\n          </Link>\n        )}\n\n        {/* </Link> */}\n      </div>\n    </CopyToClipboard>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}