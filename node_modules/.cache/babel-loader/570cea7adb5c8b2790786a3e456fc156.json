{"ast":null,"code":"var _jsxFileName = \"/Users/edwardgoss/Documents/2020/new-color-project/src/Palette.js\";\nimport React, { useState } from \"react\";\nimport ColorBox from \"./ColorBox\";\nimport Navbar from \"./Navbar\";\nimport PaletteFooter from \"./PaletteFooter\";\nimport styles from \"./styles/PaletteStyles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nfunction Palette(props) {\n  const [level, setLevel] = useState(500);\n  const [format, setFormat] = useState(\"hex\");\n  const {\n    colors,\n    paletteName,\n    emoji,\n    id\n  } = props.palette;\n  const {\n    classes\n  } = props;\n\n  const changeLevel = level => {\n    setLevel(level);\n  };\n\n  const changeFormat = val => {\n    setFormat(val);\n  };\n\n  const colorBoxes = colors[level].map(color => React.createElement(ColorBox, {\n    background: color[format],\n    name: color.name,\n    key: color.id,\n    moreUrl: `/palette/${id}/${color.id}`,\n    showingFullPalette: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: classes.Palette,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    level: level,\n    changeLevel: changeLevel,\n    handleChange: changeFormat,\n    showingAllColors: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, colorBoxes), React.createElement(PaletteFooter, {\n    paletteName: paletteName,\n    emoji: emoji,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}\n\nexport default withStyles(styles)(Palette);","map":{"version":3,"sources":["/Users/edwardgoss/Documents/2020/new-color-project/src/Palette.js"],"names":["React","useState","ColorBox","Navbar","PaletteFooter","styles","withStyles","Palette","props","level","setLevel","format","setFormat","colors","paletteName","emoji","id","palette","classes","changeLevel","changeFormat","val","colorBoxes","map","color","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,MAAqCR,KAAK,CAACS,OAAjD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcV,KAApB;;AAEA,QAAMW,WAAW,GAAGV,KAAK,IAAI;AAC3BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMW,YAAY,GAAGC,GAAG,IAAI;AAC1BT,IAAAA,SAAS,CAACS,GAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAGT,MAAM,CAACJ,KAAD,CAAN,CAAcc,GAAd,CAAkBC,KAAK,IACxC,oBAAC,QAAD;AACE,IAAA,UAAU,EAAEA,KAAK,CAACb,MAAD,CADnB;AAEE,IAAA,IAAI,EAAEa,KAAK,CAACC,IAFd;AAGE,IAAA,GAAG,EAAED,KAAK,CAACR,EAHb;AAIE,IAAA,OAAO,EAAG,YAAWA,EAAG,IAAGQ,KAAK,CAACR,EAAG,EAJtC;AAKE,IAAA,kBAAkB,EAAE,IALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAAnB;AASA,SACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACX,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,WAAW,EAAEU,WAFf;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,gBAAgB,MAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCS,UAAjC,CAPF,EAQE,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAER,WAA5B;AAAyC,IAAA,KAAK,EAAEC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD;;AAED,eAAeT,UAAU,CAACD,MAAD,CAAV,CAAmBE,OAAnB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ColorBox from \"./ColorBox\";\nimport Navbar from \"./Navbar\";\nimport PaletteFooter from \"./PaletteFooter\";\nimport styles from \"./styles/PaletteStyles\";\nimport { withStyles } from \"@material-ui/styles\";\n\n\n\nfunction Palette(props) {\n  const [level, setLevel] = useState(500);\n  const [format, setFormat] = useState(\"hex\");\n  const { colors, paletteName, emoji, id } = props.palette;\n  const { classes } = props;\n\n  const changeLevel = level => {\n    setLevel(level);\n  };\n  const changeFormat = val => {\n    setFormat(val);\n  };\n\n  const colorBoxes = colors[level].map(color => (\n    <ColorBox\n      background={color[format]}\n      name={color.name}\n      key={color.id}\n      moreUrl={`/palette/${id}/${color.id}`}\n      showingFullPalette={true}\n    />\n  ));\n  return (\n    <div className={classes.Palette}>\n      <Navbar\n        level={level}\n        changeLevel={changeLevel}\n        handleChange={changeFormat}\n        showingAllColors\n      ></Navbar>\n      <div className={classes.colors}>{colorBoxes}</div>\n      <PaletteFooter paletteName={paletteName} emoji={emoji} />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Palette);\n"]},"metadata":{},"sourceType":"module"}